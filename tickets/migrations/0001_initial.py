# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-10-14 00:50
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models
import stdimage.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text=b'Shows up on pages.', max_length=50)),
                ('slug', models.SlugField(help_text=b'Will be used in class names, so you can style categories differently.')),
                ('sort', models.IntegerField(help_text=b'Low to high, sorts the sidebar.', validators=[django.core.validators.MinValueValidator(6, b'Minimum values is 6')])),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField(default=datetime.time(19, 30))),
                ('maximum_sell', models.PositiveIntegerField(default=80, help_text=b'The maximum number of tickets we will allow to be reserved.')),
                ('hours_til_close', models.IntegerField(default=2, help_text=b"Hours before 'time' that we will stop reservations being made.")),
                ('unique_code', models.CharField(max_length=16)),
            ],
            options={
                'verbose_name': 'Occurrence',
                'verbose_name_plural': 'Occurrences',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket', models.CharField(max_length=80)),
                ('stamp', models.DateTimeField(auto_now=True)),
                ('unique_code', models.CharField(max_length=16)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('number', models.IntegerField()),
                ('number_concession', models.IntegerField(default=0)),
                ('number_member', models.IntegerField(default=0)),
                ('number_public', models.IntegerField(default=0)),
                ('number_season', models.IntegerField(default=0)),
                ('number_season_sale', models.IntegerField(default=0)),
                ('number_season_sale_nnt', models.IntegerField(default=0)),
                ('number_fellow', models.IntegerField(default=0)),
                ('number_fringe', models.IntegerField(default=0)),
                ('number_matinee_freshers', models.IntegerField(default=0)),
                ('number_matinee_freshers_nnt', models.IntegerField(default=0)),
                ('number_stuff', models.IntegerField(default=0)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Occurrence')),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('slug', models.SlugField(blank=True, help_text=b'Used in the URL of the detail page, leave blank to auto-generate.')),
                ('location', models.CharField(default=b'New Theatre', help_text=b'Will show up alongside show, you can hide this with CSS if needed.', max_length=30)),
                ('description', models.TextField(help_text=b'A short description, one paragraph only.')),
                ('long_description', models.TextField(blank=True, help_text=b'Shows up on the detail page, this field is written in Markdown. (See <a href="http://www.darkcoding.net/software/markdown-quick-reference/">Markdown reference</a> for reference.')),
                ('poster', stdimage.models.StdImageField(blank=True, help_text=b'Upload a large image, we will automatically create smaller versions to use.', null=True, upload_to=stdimage.utils.UploadToClassNameDir())),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Category')),
            ],
            options={
                'verbose_name': 'Show',
                'verbose_name_plural': 'Shows',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.DateTimeField(auto_now=True)),
                ('person_name', models.CharField(max_length=80)),
                ('email_address', models.EmailField(max_length=80)),
                ('initial_quantity', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('cancelled', models.BooleanField(default=False)),
                ('collected', models.BooleanField(default=False)),
                ('unique_code', models.CharField(max_length=16)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Occurrence')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.AddField(
            model_name='occurrence',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.Show'),
        ),
    ]
